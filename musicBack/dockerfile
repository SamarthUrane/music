# # 1. Use an official Node.js runtime as a parent image
# FROM node:18

# # 2. Set the working directory inside the container
# WORKDIR /app

# # 3. Copy package.json and package-lock.json to the working directory
# COPY package*.json ./

# # 4. Install dependencies
# RUN npm install

# # 5. Copy the rest of the application code to the container
# COPY . .

# # 6. Expose the port that the application will run on (e.g., 3000)
# EXPOSE 3000


# # 8. Command to run the application
# CMD ["node", "app.js"]


# Stage 1: Build the application
FROM node:18 AS build

# Set the working directory inside the build container
WORKDIR /app

# Copy package.json and package-lock.json to the working directory
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application code
COPY . .

# Optionally build the application if needed (e.g., transpile TypeScript or build assets)
# For example, if you use a build script:
# RUN npm run build

# Stage 2: Create a lightweight production image
FROM node:18-alpine AS production

# Set the working directory in the final image
WORKDIR /app

# Copy only necessary files from the build stage
COPY --from=build /app /app

# Expose the port that the application will run on
EXPOSE 3000

# Run the application
CMD ["node", "app.js"]
